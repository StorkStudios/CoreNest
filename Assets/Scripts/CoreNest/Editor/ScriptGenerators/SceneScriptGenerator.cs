using System.IO;
using System.Text;
using UnityEditor;

[InitializeOnLoad]
public static class SceneScriptGenerator
{
    private class ScriptGenerator : ScriptGeneratorBase
    {
        public ScriptGenerator(string name, string assetPath, string extension = ".cs") : base(name, assetPath, extension) { }

        protected override string GetNewFileContent()
        {
            EditorBuildSettingsScene[] scenes = EditorBuildSettings.scenes;

            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.AppendLine($"//Script generated by {nameof(SceneScriptGenerator)}.cs");
            stringBuilder.AppendLine($"public enum {name}");
            stringBuilder.AppendLine("{");

            int i = 0;
            foreach (EditorBuildSettingsScene scene in scenes)
            {
                string sceneName = Path.GetFileNameWithoutExtension(scene.path);
                string fieldName = ReplaceSpecialCharacters(sceneName);
                stringBuilder.AppendLine($"\t{fieldName} = {i},");
                i++;
            }

            stringBuilder.AppendLine("}");

            stringBuilder.AppendLine("");

            stringBuilder.AppendLine($"public static class {name}Extensions");
            stringBuilder.AppendLine("{");
            stringBuilder.AppendLine($"\tpublic static int GetBuildIndex(this {name} value)");
            stringBuilder.AppendLine("\t{");
            stringBuilder.AppendLine("\t\treturn (int)value;");
            stringBuilder.AppendLine("\t}");
            stringBuilder.AppendLine("}");

            return stringBuilder.ToString();
        }
    }

    private readonly static ScriptGenerator generator;

    [MenuItem("Assets/Create/GameControl/ScenesFile", priority = -20)]
    private static void CreateAndUpdateScenesFile()
    {
        generator.CreateAndUpdateFile();
    }

    static SceneScriptGenerator()
    {
        generator ??= new ScriptGenerator("Scene", "Scripts/GameControl");

        EditorBuildSettings.sceneListChanged += generator.UpdateFile;
    }
}
